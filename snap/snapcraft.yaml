name: microceph
base: core20
adopt-info: microceph
summary: Ceph for a one-rack cluster and appliances
description: |
  MicroCeph begins
grade: devel
confinement: strict

environment:
  LD_LIBRARY_PATH: $SNAP/lib:$SNAP/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph:$SNAP/usr/lib:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph/compressor:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph/crypto:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph/erasure-code
  PATH: $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
  PYTHONPATH: $SNAP/usr/lib/python3.8:$SNAP/usr/lib/python3/dist-packages
  TMPDIR: $SNAP_COMMON/tmp

layout:
  # for dynamic loading of plugins
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/ceph
  /etc/ceph:
    symlink: $SNAP_COMMON/etc/ceph
  /var/lib/ceph:
    symlink: $SNAP_COMMON/var/lib/ceph
  /var/log/ceph:
    symlink: $SNAP_COMMON/var/log/ceph

# NOTE: Most of these apps exist for PoC type testing and may be removed before
# we ship anything. Most interaction should happen through the autonomous
# `microceph` control plane and supporting CLI commands.
apps:
  microceph:
    command: bin/microceph.sh
    plugs:
      - block-devices
      - hardware-observe
      - mount-observe
      - network
      - network-bind
      - network-control
      - network-observe
  ceph:
    command: usr/bin/ceph
    plugs:
      - network
      - network-bind
  ceph-authtool:
    command: usr/bin/ceph-authtool
  ceph-mon:
    command: usr/bin/ceph-mon
    plugs:
      - network
      - network-bind
  ceph-mgr:
    command: usr/bin/ceph-mgr
    plugs:
      - network
      - network-bind
  ceph-osd:
    command: usr/bin/ceph-osd
    plugs:
      - block-devices
      - hardware-observe
      - mount-observe
      - network
      - network-bind
      - network-control
  ceph-volume:
    command: usr/sbin/ceph-volume
    plugs:
      - block-devices
      - hardware-observe
      - mount-observe
      - network
      - network-bind
      - network-control
  monmaptool:
    command: usr/bin/monmaptool

parts:
  ceph-volume:
    # The upstream Ceph sources hard codes the service username 'ceph' several
    # places in the code base for the `ceph-volume` program. When running under
    # a Mandatory Access Control regime such as AppArmor as enforced by a
    # strict confined snap, the point of running as non-root user becomes moot.
    plugin: cmake
    source: https://git.launchpad.net/ubuntu/+source/ceph
    source-type: git
    source-branch: ubuntu/focal-updates
    override-pull: |
      snapcraftctl pull
      patch -p1 < $SNAPCRAFT_PROJECT_DIR/patch/ceph-volume-drop-hardcoded-user.patch
    override-build: |
      dpkg-source --before-build .
      cd src/ceph-volume
      python3 setup.py bdist
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages
      python3 setup.py install --prefix $SNAPCRAFT_PART_INSTALL --install-lib $SNAPCRAFT_PART_INSTALL/usr/lib/python3/dist-packages
    build-packages:
      - python3-setuptools
    organize:
      bin/ceph-volume: usr/sbin/ceph-volume
      bin/ceph-volume-systemd: usr/sbin/ceph-volume-systemd
  microceph:
    after: [ceph-volume]
    source: cli/
    plugin: dump
    override-pull: |
      snapcraftctl pull
      CEPH_VERSION=$(dpkg \
          -f $SNAPCRAFT_PART_SRC/../stage_packages/ceph-mon*.deb \
          Version|cut -f1 -d-)
      GIT_VERSION=$(git -C $SNAPCRAFT_PROJECT_DIR describe --always)
      snapcraftctl set-version $CEPH_VERSION+$GIT_VERSION
    organize:
      microceph.sh: bin/microceph.sh
    build-packages:
      - git
    stage-packages:
      - ceph-base
      - ceph-common
      - ceph-mds
      - ceph-mgr
      - ceph-mgr-modules-core
      - ceph-mon
      - ceph-osd
      - cryptsetup-bin
      - dmeventd
      - dmidecode
      - dmsetup
      - gdisk
      - groff-base
      - hdparm
      - ibverbs-providers
      - javascript-common
      - libaio1
      - libbabeltrace1
      - libboost-context1.71.0
      - libboost-iostreams1.71.0
      - libboost-program-options1.71.0
      - libboost-python1.71.0
      - libboost-thread1.71.0
      - libcephfs2
      - libdevmapper-event1.02.1
      - libdw1
      - libelf1
      - libglib2.0-0
      - libglib2.0-data
      - libgoogle-perftools4
      - libibverbs1
      - libicu66
      - libjs-jquery
      - libleveldb1d
      - liblvm2cmd2.03
      - libnl-3-200
      - libnl-route-3-200
      - liboath0
      - libparted2
      - libpopt0
      - libpython3.8
      - librabbitmq4
      - librados2
      - libradosstriper1
      - librbd1
      - librdmacm1
      - libreadline5
      - librgw2
      - libsnappy1v5
      - libtcmalloc-minimal4
      - libunwind8
      - lvm2
      - mount  # we need to ship `mount`
      - parted
      - powermgmt-base
      - python-pastedeploy-tpl
      - python3-bcrypt
      - python3-bs4
      - python3-ceph-argparse
      - python3-ceph-common
      - python3-cephfs
      - python3-certifi
      - python3-cffi-backend
      - python3-chardet
      - python3-cherrypy3
      - python3-cryptography
      - python3-dateutil
      - python3-idna
      - python3-jwt
      - python3-logutils
      - python3-lxml
      - python3-mako
      - python3-markupsafe
      - python3-openssl
      - python3-paste
      - python3-pastedeploy
      - python3-pastescript
      - python3-pecan
      - python3-pkg-resources
      - python3-prettytable
      - python3-pyinotify
      - python3-rados
      - python3-rbd
      - python3-requests
      - python3-routes
      - python3-simplegeneric
      - python3-simplejson
      - python3-singledispatch
      - python3-six
      - python3-soupsieve
      - python3-tempita
      - python3-urllib3
      - python3-waitress
      - python3-webob
      - python3-webtest
      - python3-werkzeug
      - radosgw
      - shared-mime-info
      - smartmontools
      - thin-provisioning-tools
      - udev        # we need to ship `udevadm`
      - util-linux  # we need to ship `blkid`
      - uuid-runtime
      - xdg-user-dirs
      - xfsprogs
    filesets:
      exclude-ceph-volume:
        - -usr/sbin/ceph-volume*
        - -usr/lib/python3/dist-packages/ceph_volume*
    stage:
      - $exclude-ceph-volume
